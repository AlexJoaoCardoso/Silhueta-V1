[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://dctcw0wt6ijm5"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_na464"]
default_input_values = [0, Vector3(1, 0, 0), 1, Vector3(0, 0, 0)]
expanded_output_ports = [0]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_r6rku"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[sub_resource type="VisualShaderNodeIntParameter" id="VisualShaderNodeIntParameter_26qlk"]
parameter_name = "BlueOrRed"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_mk3g1"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_frool"]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform int BlueOrRed = 0;



void fragment() {
// IntParameter:4
	int n_out4p0 = BlueOrRed;


// Input:6
	vec4 n_out6p0 = COLOR;


// VectorOp:2
	vec3 n_in2p0 = vec3(1.00000, 0.00000, 0.00000);
	vec3 n_out2p0 = n_in2p0 - vec3(n_out6p0.xyz);
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;
	float n_out2p3 = n_out2p0.b;


// VectorCompose:3
	float n_in3p3 = 0.00000;
	vec4 n_out3p0 = vec4(n_out2p1, n_out2p2, n_out2p3, n_in3p3);


	vec3 n_out5p0;
// If:5
	float n_in5p1 = 0.00000;
	float n_in5p2 = 0.00001;
	vec3 n_in5p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in5p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(float(n_out4p0) - n_in5p1) < n_in5p2)
	{
		n_out5p0 = vec3(n_out3p0.xyz);
	}
	else if(float(n_out4p0) < n_in5p1)
	{
		n_out5p0 = n_in5p5;
	}
	else
	{
		n_out5p0 = n_in5p4;
	}


// Output:0
	COLOR.rgb = n_out5p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(660, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeVectorOp_na464")
nodes/fragment/2/position = Vector2(-180, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorCompose_r6rku")
nodes/fragment/3/position = Vector2(180, 80)
nodes/fragment/4/node = SubResource("VisualShaderNodeIntParameter_26qlk")
nodes/fragment/4/position = Vector2(20, 300)
nodes/fragment/5/node = SubResource("VisualShaderNodeIf_mk3g1")
nodes/fragment/5/position = Vector2(420, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_frool")
nodes/fragment/6/position = Vector2(-640, 120)
nodes/fragment/connections = PackedInt32Array(2, 1, 3, 0, 2, 2, 3, 1, 2, 3, 3, 2, 4, 0, 5, 0, 3, 0, 5, 3, 5, 0, 0, 0, 6, 0, 2, 1)
