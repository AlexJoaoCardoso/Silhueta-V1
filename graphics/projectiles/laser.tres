[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://ba8wta3b4s8g3"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_mf74h"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kx22v"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]
expanded_output_ports = [0]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_gcc84"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[sub_resource type="VisualShaderNodeIntParameter" id="VisualShaderNodeIntParameter_4ruc4"]
parameter_name = "BlueOrRed"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_72dlw"]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform int BlueOrRed = 0;



void fragment() {
// IntParameter:5
	int n_out5p0 = BlueOrRed;


// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


// VectorOp:3
	vec3 n_in3p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out3p0 = n_in3p0 - vec3(n_out2p0.xyz);
	float n_out3p1 = n_out3p0.r;
	float n_out3p2 = n_out3p0.g;
	float n_out3p3 = n_out3p0.b;


// VectorCompose:4
	vec4 n_out4p0 = vec4(n_out3p1, n_out3p2, n_out3p3, n_out2p4);


	vec3 n_out6p0;
// If:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 0.00001;
	if(abs(float(n_out5p0) - n_in6p1) < n_in6p2)
	{
		n_out6p0 = vec3(n_out4p0.xyz);
	}
	else if(float(n_out5p0) < n_in6p1)
	{
		n_out6p0 = vec3(n_out2p0.xyz);
	}
	else
	{
		n_out6p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out6p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1120, 280)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_mf74h")
nodes/fragment/2/position = Vector2(-140, 280)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_kx22v")
nodes/fragment/3/position = Vector2(340, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorCompose_gcc84")
nodes/fragment/4/position = Vector2(620, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeIntParameter_4ruc4")
nodes/fragment/5/position = Vector2(200, 500)
nodes/fragment/6/node = SubResource("VisualShaderNodeIf_72dlw")
nodes/fragment/6/position = Vector2(900, 360)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 1, 3, 1, 4, 0, 3, 2, 4, 1, 3, 3, 4, 2, 2, 4, 4, 3, 5, 0, 6, 0, 4, 0, 6, 3, 2, 0, 6, 4, 2, 0, 6, 5, 6, 0, 0, 0)
